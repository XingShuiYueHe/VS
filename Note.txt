YJ_Earth   在Assets-Plugs-Plugins-WebuSocket_Libs添加了SimpleJson.cs,WS1.cs,WSCheck.cs
用于验证 放置于Manager父物体里
Vufria账户
Letgo
Abc90093934

0b 二进制输出十进制
0x 十六进制输出十进制
* 打开与关闭:
发送：
{'type':'emit','from':'admin','to':'v5','key':'word_open'}
{'type':'emit','from':'admin','to':'v5','key':'word_close'}
接收：无
* 发送主副标题
{'type':'emit','from':'admin','to':'v5','key':'word_set', 'word1':'***', 'word2':'***'}
接收：无
如果编译运行与导出运行不一致，多半是库问题，导出的项目data―>Manage

乙方序列化对象把甲方转成乙方，乙方反序列化对象把乙方转成甲方

Invoke可以调用变量方法，就是bool a(){},int b(){}

stopallcorountine 是停止当前脚本的所有协程，是当前的不是所有

awake不受游戏对象脚本false状态影响，但是受到游戏对象false影响，start,update均受到影响

Plugins文件夹下的脚本与它外的脚本是隔离状态，互不影响

EventSystem.current.currentSelectedGameObject这个只作用于有interactable的组

NonSerialized 与 HideInInspector
添加了这两个属性的变量都不会在Unity的Inspector面板上显示，而NonSerialized介绍如下：The NonSerialized attribute marks a variable to not be serialized.它可以不被序列化，意思就是在场景外你改变了值，然后用这个方式隐藏，不会引用场景外值。相比于HideInInspector，在场景外可以改变值，然后隐藏，还是用场景外的值，而且我们虽然没法在Inspector上见到该变量了，但还是可以通过Editor代码去修改值。
www的速度<IO的速度<unitywebrequest的速度
offsetMin ： 对应Left、TopBottom
offsetMax ： 对应Right、Top
unity在编辑器上，application.datapath是在相对路径/Assets/……，在导出后是相对路径/productname_data/……
startcoroutine必须在对象active下才能运行，意思是在某类调用另个类的方法（改方法有协程），协程不会运行，必须另个类附着的对象是active
using System.Linq;
var keys = videoGroupDic.Where(q => q.Value ==1).Select(q => q.Key);//通过键值查找键
凡事脚本没有勾选项的，都是因为你的脚本没有Start等周期方法。
数组【i】可以在方法里被赋值，相当于ref了，而且这里建议亲不要在同个list的循环中使用remove的方法
unity的分辨率设置是有效的，但是导出来的分辨率不会超过本台机的最大分辨率大小，箭头锚点调节可控制UI随着分辨率大小自动调整
SELECT COUNT(id)  
FROM choose
C#的aysnc不能跟unity的协程，invoke一起用,调用不起来的
~运算是按位补码运算，,正常运算，a为自然数，即a数字的补码（反码）的补码（补码的补码是原码）,首位数字不变，是符号，然后补码的补码加1即可――――也就是数字改变符号成为十进制减1――二进制是，针对正数（包括0），它的原码首位变1，并+1；针对负数，先减1再改变它的源码首位，为0――简单算法，就是数字的相反数减1
当桌面不显示图标，多半因为路径错误导致
git命令符：mkdir 文件名 //创建文件
cd 文件名//进入文件
git clone http:…………  //克隆文件包
cmd命令符：WF.msc//打开防火墙设置
<PropertyGroup>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
    None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
</PropertyGroup>
192.168.31.213
x86 = HoloLens（第一代）
ARM = HoloLens 2
　　ａ、SOCK_STREAM：表示面向连接的数据传输方式。数据可以准确无误地到达另一台计算机，如果损坏或丢失，可以重新发送，但效率相对较慢。常见的 http 协议就使用 SOCK_STREAM 传输数据，因为要确保数据的正确性，否则网页不能正常解析。
　　ｂ、SOCK_DGRAM：表示无连接的数据传输方式。计算机只管传输数据，不作数据校验，如果数据在传输中损坏，或者没有到达另一台计算机，是没有办法补救的。也就是说，数据错了就错了，无法重传。因为 SOCK_DGRAM 所做的校验工作少，所以效率比 SOCK_STREAM 高。

ALPHA_8 -- (1B)
RGB_565 -- (2B)
ARGB_4444 -- (2B)
ARGB_8888 -- (4B)
RGBA_F16 -- (8B)
windows平台有display，安卓没有display,平台问题
内嵌网页如果安卓选择wwview，如果pc选择zfbrowser
对写入json数据的类，是需要序列化才行
  UnityWebRequest uwr = UnityWebRequest.Get(picpath);
        DownloadHandler dl =new DownloadHandlerTexture();
        uwr.downloadHandler = dl;
utf8json插件，读取json,缺点不适用il2cpp
dnspy,il2cppdumper反编译工具dat
 UNITY_STANDALONE_WIN || UNITY_EDITOR_WIN
UNITY_ANDROID||UNITY_EDITOR_OSX || UNITY_STANDALONE_OSX || UNITY_IPHONE || UNITY_IOS || UNITY_TVOS
控制面板\系统和安全\Windows Defender 防火墙
关于unity不能刷新出packages manages问题，是因为可能ip被锁死，更换热点即可
for循环先出进入整结果，然后执行++,然后判断条件
unity的destroy是个坑，延迟删除的方法
对于安卓的文件输入，安装过程会被隐藏，只能通过unitywebrequest获取对应路径加载出来
如果编辑器意外崩溃了，但场景未保存，这时可以打开工程目录，找到 / Temp/_Backupscenes / 文件夹，可以看到有后缀名为. backup 的文件，将该文件的后缀名改为. unity 拖拽到项目视图，即可还原编辑器崩溃前的场景。
浅拷贝:只复制对象其中包含的值类型的成员变量，而引用类型的成员对象没有被复制（string除外
深拷贝:除了对象本身被复制外，对象所包含的所有成员变量都会被复制，包括引用类型的成员对象